<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="19" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="15713" started-at="2018-04-16T09:52:36Z" finished-at="2018-04-16T09:52:52Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="15713" started-at="2018-04-16T09:52:36Z" finished-at="2018-04-16T09:52:52Z">
      <class name="com.user.tests.APITests">
        <test-method status="PASS" signature="test_error_handling(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_error_handling" duration-ms="2718" started-at="2018-04-16T17:52:36Z" data-provider="ErrorHandling" finished-at="2018-04-16T17:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is plain text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Optional plain text with large content and check for errors]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_error_handling -->
        <test-method status="PASS" signature="test_fill_char_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_char_different_types" duration-ms="389" started-at="2018-04-16T17:52:39Z" data-provider="FillChars" finished-at="2018-04-16T17:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is xml text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xml]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xml]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_char_different_types -->
        <test-method status="PASS" signature="test_fill_char_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_char_different_types" duration-ms="600" started-at="2018-04-16T17:52:39Z" data-provider="FillChars" finished-at="2018-04-16T17:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is plain text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_char_different_types -->
        <test-method status="PASS" signature="test_fill_char_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_char_different_types" duration-ms="351" started-at="2018-04-16T17:52:40Z" data-provider="FillChars" finished-at="2018-04-16T17:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is json text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[json]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[~]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_char_different_types -->
        <test-method status="FAIL" signature="test_fill_char_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_char_different_types" duration-ms="627" started-at="2018-04-16T17:52:40Z" data-provider="FillChars" finished-at="2018-04-16T17:52:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is plain text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[^]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.user.tests.APITests.test_fill_char_different_types(APITests.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_char_different_types -->
        <test-method status="PASS" signature="test_fill_char_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_char_different_types" duration-ms="27" started-at="2018-04-16T17:52:41Z" data-provider="FillChars" finished-at="2018-04-16T17:52:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is json text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[is, json]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_char_different_types -->
        <test-method status="FAIL" signature="test_fill_char_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_char_different_types" duration-ms="535" started-at="2018-04-16T17:52:41Z" data-provider="FillChars" finished-at="2018-04-16T17:52:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is profanity text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[profanity]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[smartass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.user.tests.APITests.test_fill_char_different_types(APITests.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_char_different_types -->
        <test-method status="PASS" signature="test_fill_word_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_word_different_types" duration-ms="268" started-at="2018-04-16T17:52:42Z" data-provider="FillWords" finished-at="2018-04-16T17:52:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is xml text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xml]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[xml]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Op1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_word_different_types -->
        <test-method status="PASS" signature="test_fill_word_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_word_different_types" duration-ms="685" started-at="2018-04-16T17:52:42Z" data-provider="FillWords" finished-at="2018-04-16T17:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is plain text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Op2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_word_different_types -->
        <test-method status="PASS" signature="test_fill_word_different_types(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="test_fill_word_different_types" duration-ms="394" started-at="2018-04-16T17:52:43Z" data-provider="FillWords" finished-at="2018-04-16T17:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is json text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[json]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[json]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Op3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_fill_word_different_types -->
        <test-method status="PASS" signature="testadd_profanity_list(java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testadd_profanity_list" duration-ms="701" started-at="2018-04-16T17:52:43Z" data-provider="AddProfanityList" finished-at="2018-04-16T17:52:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chu,chi,chn,chj,chk,chm,chb,chf,chg,cht]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testadd_profanity_list -->
        <test-method status="PASS" signature="testadd_profanity_list(java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testadd_profanity_list" duration-ms="494" started-at="2018-04-16T17:52:44Z" data-provider="AddProfanityList" finished-at="2018-04-16T17:52:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[New]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chu,chi,chn,chj,chk,chm,chb,chf,chg,cht,chr,chs,che,chd,cha,chz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testadd_profanity_list -->
        <test-method status="PASS" signature="testgetresponse_for_simpleplaintext_withdifferent_texttypes(java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testgetresponse_for_simpleplaintext_withdifferent_texttypes" duration-ms="414" started-at="2018-04-16T17:52:44Z" data-provider="DifferentData" finished-at="2018-04-16T17:52:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is xml text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetresponse_for_simpleplaintext_withdifferent_texttypes -->
        <test-method status="PASS" signature="testgetresponse_for_simpleplaintext_withdifferent_texttypes(java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testgetresponse_for_simpleplaintext_withdifferent_texttypes" duration-ms="681" started-at="2018-04-16T17:52:45Z" data-provider="DifferentData" finished-at="2018-04-16T17:52:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is plain text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[plain]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetresponse_for_simpleplaintext_withdifferent_texttypes -->
        <test-method status="PASS" signature="testgetresponse_for_simpleplaintext_withdifferent_texttypes(java.lang.String, java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testgetresponse_for_simpleplaintext_withdifferent_texttypes" duration-ms="316" started-at="2018-04-16T17:52:45Z" data-provider="DifferentData" finished-at="2018-04-16T17:52:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is json text]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetresponse_for_simpleplaintext_withdifferent_texttypes -->
        <test-method status="PASS" signature="testprofanity_for_plaintext(java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testprofanity_for_plaintext" duration-ms="701" started-at="2018-04-16T17:52:46Z" data-provider="ProfanityList" finished-at="2018-04-16T17:52:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is plain text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testprofanity_for_plaintext -->
        <test-method status="PASS" signature="testprofanity_for_plaintext(java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testprofanity_for_plaintext" duration-ms="575" started-at="2018-04-16T17:52:46Z" data-provider="ProfanityList" finished-at="2018-04-16T17:52:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[This is Shit text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testprofanity_for_plaintext -->
        <test-method status="PASS" signature="testprofanity_for_plaintext(java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testprofanity_for_plaintext" duration-ms="709" started-at="2018-04-16T17:52:47Z" data-provider="ProfanityList" finished-at="2018-04-16T17:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ass Goddamn Goddamnit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testprofanity_for_plaintext -->
        <test-method status="PASS" signature="testprofanity_for_plaintext(java.lang.String)[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="testprofanity_for_plaintext" duration-ms="601" started-at="2018-04-16T17:52:48Z" data-provider="ProfanityList" finished-at="2018-04-16T17:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Welcome to Dog! Lol]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testprofanity_for_plaintext -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.user.tests.APITests@3e6fa38a]" name="teardown" is-config="true" duration-ms="3656" started-at="2018-04-16T17:52:48Z" finished-at="2018-04-16T17:52:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.user.tests.APITests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
